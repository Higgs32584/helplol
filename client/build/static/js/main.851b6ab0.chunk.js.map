{"version":3,"sources":["components/navbar.js","components/edit.js","components/create.js","components/recordList.js","App.js","index.js"],"names":["Navbar","className","to","type","id","Edit","props","onChangePersonName","bind","onChangePersonPosition","onChangePersonLevel","onSubmit","state","person_name","person_position","person_level","records","axios","get","this","match","params","then","response","setState","data","name","description","catch","error","console","log","e","target","value","preventDefault","newEditedperson","post","res","history","push","align","onChange","checked","Component","withRouter","Create","newperson","style","marginTop","Record","record","_id","href","onClick","deleteRecord","search","window","location","query","URLSearchParams","RecordList","delete","filter","el","toLowerCase","includes","map","currentrecord","recordList","App","exact","path","action","method","htmlFor","placeholder","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.851b6ab0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// We import bootstrap to make our application look better.\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n// We import NavLink to utilize the react router.\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// Here, we display our Navbar\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <NavLink className=\"navbar-brand\" to=\"/\">\r\n          MongoDB\r\n        </NavLink>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/create\">\r\n                Create Record\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n\r\n","import React,  {Component}  from \"react\";\r\n// This will require to npm install axios\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Edit extends Component {\r\n  // This is the constructor that stores the data.\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangePersonName = this.onChangePersonName.bind(this);\r\n    this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\r\n    this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      person_name: \"\",\r\n      person_position: \"\",\r\n      person_level: \"\",\r\n      records: [],\r\n    };\r\n  }\r\n  // This will get the record based on the id from the database.\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/animals\" + this.props.match.params.id)\r\n      .then((response) => {\r\n        this.setState({\r\n          person_name: response.data.name,\r\n          person_position: response.data.id,\r\n          person_level: response.data.description,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // These methods will update the state properties.\r\n  onChangePersonName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonPosition(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonLevel(e) {\r\n    this.setState({\r\n      id: e.target.value,\r\n    });\r\n  }\r\n\r\n  // This function will handle the submission.\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newEditedperson = {\r\n      person_name: this.state.name,\r\n      person_position: this.state.id,\r\n      person_level: this.state.description,\r\n    };\r\n    console.log(newEditedperson);\r\n\r\n    // This will send a post request to update the data in the database.\r\n    axios\r\n      .post(\r\n        \"http://localhost:5000/update/\" + this.props.match.params.id,\r\n        newEditedperson\r\n      )\r\n      .then((res) => console.log(res.data));\r\n\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  // This following section will display the update-form that takes the input from the user to update the data.\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 align=\"center\">Update Record</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Person's Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.person_name}\r\n              onChange={this.onChangePersonName}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Position: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.person_position}\r\n              onChange={this.onChangePersonPosition}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"priorityOptions\"\r\n                id=\"priorityLow\"\r\n                value=\"Intern\"\r\n                checked={this.state.person_level === \"Intern\"}\r\n                onChange={this.onChangePersonLevel}\r\n              />\r\n              <label className=\"form-check-label\">Intern</label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"priorityOptions\"\r\n                id=\"priorityMedium\"\r\n                value=\"Junior\"\r\n                checked={this.state.person_level === \"Junior\"}\r\n                onChange={this.onChangePersonLevel}\r\n              />\r\n              <label className=\"form-check-label\">Junior</label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"priorityOptions\"\r\n                id=\"priorityHigh\"\r\n                value=\"Senior\"\r\n                checked={this.state.person_level === \"Senior\"}\r\n                onChange={this.onChangePersonLevel}\r\n              />\r\n              <label className=\"form-check-label\">Senior</label>\r\n            </div>\r\n          </div>\r\n          <br />\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Record\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// You can get access to the history object's properties and the closest <Route>'s match via the withRouter\r\n// higher-order component. This makes it easier for us to edit our records.\r\n\r\nexport default withRouter(Edit);\r\n","import React, { Component } from \"react\";\r\n// This will require to npm install axios\r\nimport axios from 'axios';\r\n\r\nexport default class Create extends Component {\r\n  // This is the constructor that stores the data.\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangePersonName = this.onChangePersonName.bind(this);\r\n    this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\r\n    this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      person_name: \"\",\r\n      person_position: \"\",\r\n      person_level: \"\",\r\n    };\r\n  }\r\n\r\n  // These methods will update the state properties.\r\n  onChangePersonName(e) {\r\n    this.setState({\r\n      person_name: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonPosition(e) {\r\n    this.setState({\r\n      person_position: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonLevel(e) {\r\n    this.setState({\r\n      person_level: e.target.value,\r\n    });\r\n  }\r\n\r\n// This function will handle the submission.\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // When post request is sent to the create url, axios will add a new record(newperson) to the database.\r\n    const newperson = {\r\n      person_name: this.state.person_name,\r\n      person_position: this.state.person_position,\r\n      person_level: this.state.person_level,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/record/add\", newperson)\r\n      .then((res) => console.log(res.data));\r\n\r\n    // We will empty the state after posting the data to the database\r\n    this.setState({\r\n      person_name: \"\",\r\n      person_position: \"\",\r\n      person_level: \"\",\r\n    });\r\n  }\r\n\r\n  // This following section will display the form that takes the input from the user.\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: 20 }}>\r\n        <h3>Create New Record</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Name of the person: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.person_name}\r\n              onChange={this.onChangePersonName}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Person's position: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.person_position}\r\n              onChange={this.onChangePersonPosition}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"priorityOptions\"\r\n                id=\"priorityLow\"\r\n                value=\"Intern\"\r\n                checked={this.state.person_level === \"Intern\"}\r\n                onChange={this.onChangePersonLevel}\r\n              />\r\n              <label className=\"form-check-label\">Intern</label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"priorityOptions\"\r\n                id=\"priorityMedium\"\r\n                value=\"Junior\"\r\n                checked={this.state.person_level === \"Junior\"}\r\n                onChange={this.onChangePersonLevel}\r\n              />\r\n              <label className=\"form-check-label\">Junior</label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"priorityOptions\"\r\n                id=\"priorityHigh\"\r\n                value=\"Senior\"\r\n                checked={this.state.person_level === \"Senior\"}\r\n                onChange={this.onChangePersonLevel}\r\n              />\r\n              <label className=\"form-check-label\">Senior</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Create person\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// This will require to npm install axios\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Record = (props) => (\r\n  <tr>\r\n    <td>{props.record.name}</td>\r\n    <td>{props.record.id}</td>\r\n    <td>{props.record.description}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.record._id}>Edit</Link> |\r\n      <a\r\n        href=\"/\"\r\n        onClick={() => {\r\n          props.deleteRecord(props.record._id);\r\n        }}\r\n      >\r\n        Delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\nconst { search } = window.location;\r\nconst query = new URLSearchParams(search).get('s');\r\n\r\nexport default class RecordList extends Component {\r\n  // This is the constructor that shall store our data retrieved from the database\r\n  constructor(props) {\r\n    super(props);\r\n    this.deleteRecord = this.deleteRecord.bind(this);\r\n    this.state = { records: [] };\r\n  }\r\n\r\n  //this.query = this.query.bind(this);\r\n  \r\n  // This method will get the data from the database.\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/animals\")\r\n      .then((response) => {\r\n        this.setState({ records: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // This method will delete a record based on the method\r\n  deleteRecord(id) {\r\n    axios.delete(\"http://localhost:5000/\" + id).then((response) => {\r\n      console.log(response.data);\r\n    });\r\n\r\n    this.setState({\r\n      record: this.state.records.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n  \r\n  // .filter((record) => record.text.toLowerCase().includes(this.query))\r\n\r\n  // {tasks.filter((task) => task.text.toLowerCase().includes(query)).map((task) => (\r\n  //   <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>))}\r\n\r\n  // This method will map out the users on the table\r\n  recordList() {\r\n    return this.state.records.filter((record) => record.name.toLowerCase().includes(query.toLowerCase())).map((currentrecord) => {\r\n      return (\r\n        <Record\r\n          record={currentrecord}\r\n          deleteRecord={this.deleteRecord}\r\n          key={currentrecord._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  \r\n\r\n  // This following section will display the table with the records of individuals.\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Record List</h3>\r\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>ID</th>\r\n              <th>Level</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.recordList()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// We use Route in order to define the different routes of our application\r\nimport { Route } from \"react-router-dom\";\r\n// We import all the components we need in our app\r\nimport Navbar from \"./components/navbar\";\r\nimport Edit from \"./components/edit\";\r\nimport Create from \"./components/create\";\r\nimport RecordList from \"./components/recordList\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Route exact path=\"/\">\r\n      <form action=\"/\" method=\"get\"> \r\n        <label htmlFor=\"header-search\">\r\n            <span className=\"visually-hidden\">Search animals!</span>\r\n        </label>\r\n        <input\r\n            type=\"text\"\r\n            id=\"header-search\"\r\n            placeholder=\"No input views all\"\r\n            name=\"s\" \r\n        />\r\n        <button type=\"submit\">Search</button>\r\n    </form>\r\n        <RecordList/>\r\n      </Route>\r\n      <Route path=\"/edit/:id\" component={Edit} />\r\n      <Route path=\"/create\">\r\n        <Create />\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}